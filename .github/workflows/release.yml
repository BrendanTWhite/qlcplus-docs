name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Extract the version from the tag
      - name: Set version from tag
        id: set_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "::set-output name=version::$VERSION"
      - name: Get previous tag
        id: prev_tag
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^1)
          echo "::set-output name=prev_tag::$PREV_TAG"
    
      - name: Get closed PRs
        id: closed_prs
        uses: actions/github-script@v6
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const { data: pulls } = await github.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'closed',
                base: 'main',
                sort: 'updated',
                direction: 'desc',
                per_page: 100,
              });
              const closedPRs = pulls.filter(pr => pr.merged_at && new Date(pr.merged_at) > new Date(context.payload.release.created_at));
              const prList = closedPRs.map(pr => `- ${pr.title} (#${pr.number})`).join("\n");
              core.setOutput("pr_list", prList);

      - name: Install PowerShell
        run: |
            sudo apt-get update
            sudo apt-get install -y powershell

      - name: Run PowerShell script
        shell: pwsh
        run: |
            ./scripts/Merge-MarkdownFiles.ps1
    
      - name: Build PDF
        uses: baileyjm02/markdown-to-pdf@v1
        with:
              input_path: ./.github/workflows/bin/
              # Specify images dir
              images_dir: ./.github/workflows/bin/images/
              image_import: images
              # Build HTML version
              build_html: true
              # Build Table of Contents
              table_of_contents: true
              # Path to output (this should be the same as the Upload Artifiact path)
              output_dir: ./.github/workflows/bin/

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body: |
            ## Closed Pull Requests
            ${{ steps.closed_prs.outputs.pr_list }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload pdf artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./.github/workflows/bin/combined_documentation.pdf
          asset_name: combined_documentation.pdf
          asset_content_type: application/pdf
